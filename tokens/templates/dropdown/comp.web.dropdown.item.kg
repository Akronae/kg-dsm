// @replacepath: tokens/comp.web.json

comp
.dropdown.item
[size: 'sm' | 'md']
[type: 'simple' | 'checkbox' | 'danger']
[state: 'default' | 'hover' | 'pressed' | 'disabled']
[
  {
    "container": {
      "value": {
        "fill": "{sem.colorSurface.<< type == 'danger' ? ({ default: 'interactive.danger.default', hover: 'interactive.danger.hover', pressed: 'interactive.danger.pressed', disabled: 'interactive.danger.disabled' })[state] : ({ default: 'interactive.light.default', hover: 'interactive.light.hover', pressed: 'interactive.light.pressed', disabled: 'interactive.light.disabled' })[state] >>}",
        "verticalPadding": "{sem.dropdown.item.<<size>>.container.verticalPadding}",
        "horizontalPadding": "{sem.dropdown.item.<<size>>.container.horizontalPadding}",
        "borderRadius": "{sem.dropdown.item.<<size>>.container.borderRadius}",
        "itemSpacing": "{sem.dropdown.item.<<size>>.container.spacing}",
        "opacity": "<< state == 'disabled' ? ('{sem.dropdown.item.' + size + '.container.opacity}') : 'none' >>"
      },
      "type": "composition"
    },
    "labelWrapper": {
      "container": {
        "value": {
          "itemSpacing": "{sem.dropdown.item.<<size>>.labelWrapper.container.spacing}"
        },
        "type": "composition"
      },
      "icon": {
        "size": {
          "value": {
            "width": "{sem.dropdown.item.<<size>>.labelWrapper.icon.size}",
            "height": "{sem.dropdown.item.<<size>>.labelWrapper.icon.size}"
          },
          "type": "composition"
        },
        "color": {
          "value": {
            "border": "{sem.borderIcon.sm.<< type == 'danger' ? 'danger' : 'default'>>}"
          },
          "type": "composition"
        }
      },
      "label": {
        "value": {
          "typography": "{sem.typography.textStyle.label.body.<<size>>}",
          "fill": "{sem.colorText.<< type == 'danger' ? 'danger' : 'dark'>>}"
        },
        "type": "composition"
      }
    },
    "description": {
      "value": {
        "typography": "{sem.typography.textStyle.paragraph.<<size>>.default}",
        "fill": "{sem.colorText.default}"
      },
      "type": "composition"
    }
  }
]